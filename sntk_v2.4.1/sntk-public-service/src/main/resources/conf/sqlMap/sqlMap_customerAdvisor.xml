<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="customerAdvisor" jdbcTimeout="5">
    <!-- 查询顾客信息 -->
    <sql id="queryCustomerInfo">
        <![CDATA[
			select
			    id AS id,
			    staff_id AS staffId,
			    union_id AS unionId,
			    remark_name AS remarkName,
			    member_name AS memberName,
			    mobile_flag AS mobileFlag,
			    customer_no AS customerNo,
			    remark_phone AS remarkPhone,
			    sex AS sex,
			    mobile_flag AS mobileFlag,
			    last_scan_time AS lastScanTime
			    from mb_customer_advisor
			    where
			    staff_id = :staffId
			    and union_id = :unionId
			    and store_code = :storeCode
 		]]>
    </sql>

    <sql id="queryCustomer">
        <![CDATA[
			select
			    id AS id,
			    staff_id AS staffId,
			    union_id AS unionId,
			    remark_name AS remarkName,
			    member_name AS memberName,
			    mobile_flag AS mobileFlag,
			    customer_no AS customerNo,
			    remark_phone AS remarkPhone,
			    sex AS sex,
			    mobile_flag AS mobileFlag,
			    last_scan_time AS lastScanTime
			    from mb_customer_advisor
			    where
			    staff_id = :staffId
			    and union_id = :unionId
 		]]>
    </sql>


    <sql id="queryByStaffIdWithBuyTimePage">
        <![CDATA[
            SELECT
                mca.union_id unionId,
                mca.customer_no customerNo,
                mca.remark_name remarkName,
                mca.remark_phone remarkPhone,
                DATE_FORMAT(mca.relation_time, '%Y-%m-%d') AS relationTime,
                cbuy.min_price minPrice,
                cbuy.max_price maxPrice,
                cbuy.expect_purchase_time expectPurchaseTime,
                cbuy.other_label labelName
            FROM
                (
                    SELECT
                        cba.staff_id,
                        cba.union_id,
                        cba.expect_purchase_time,
                        cba.other_label,
                        sum(cci.min_price) min_price,
                        SUM(cci.max_price) max_price
                    FROM mb_customer_buy_addition cba LEFT JOIN mb_customer_cate_intention cci
                        ON cba.staff_id = cci.staff_id AND cba.union_id = cci.union_id
                    WHERE
                        cba.staff_id = :staffId
                        <#if isToday>
                             AND cba.expect_purchase_time = :buyTime
                        <#elseif  buyTime ? exists>
                             AND cba.expect_purchase_time <= :buyTime
                        </#if>
                    GROUP BY
                        cba.staff_id,
                        cba.union_id
                    LIMIT :page , :size
                ) cbuy
            LEFT JOIN mb_customer_advisor mca ON mca.staff_id = cbuy.staff_id
            AND mca.union_id = cbuy.union_id
            WHERE
                mca.staff_id = :staffId
              < #if searchParam ? exists>
                  AND mca.remark_name =:searchParam
              </ #if>

            ORDER BY
                relationTime DESC

        ]]>
    </sql>

    <sql id="queryByStaffIdPage">
        <![CDATA[
            SELECT
                mca.union_id unionId,
                mca.customer_no customerNo,
                mca.remark_name remarkName,
                mca.remark_phone remarkPhone,
                DATE_FORMAT( mca.relation_time, '%Y-%m-%d') AS relationTime,
                cbuy.min_price minPrice,
                cbuy.max_price maxPrice,
                cbuy.expect_purchase_time expectPurchaseTime,
                cbuy.other_label labelName
            FROM
                mb_customer_advisor mca
            LEFT JOIN (
                SELECT
                    cba.staff_id,
                    cba.union_id,
                    cba.expect_purchase_time,
                    cba.other_label,
                    sum(cci.min_price) min_price,
                    SUM(cci.max_price) max_price
                FROM
                    mb_customer_buy_addition cba
                LEFT JOIN mb_customer_cate_intention cci ON cba.staff_id = cci.staff_id
                AND cba.union_id = cci.union_id
                WHERE
                    cba.staff_id = :staffId
                GROUP BY
                    cba.staff_id,
                    cba.union_id
            ) cbuy ON mca.staff_id = cbuy.staff_id
            AND mca.union_id = cbuy.union_id
            WHERE
                mca.staff_id = :staffId
             <#if searchParam ? exists>
                AND mca.remark_name =:searchParam
             </#if>
            ORDER BY
                relationTime DESC
            LIMIT :page, :size
        ]]>
    </sql>

    <sql id = "queryCustomerList">
        <![CDATA[
            SELECT a.staff_id,
                a.union_id AS unionId,
                a.remark_name AS custName,
                a.customer_no AS custId,
                DATE_FORMAT(b.expect_purchase_time, '%Y-%m-%d') AS expectDate,
                a.remark_phone AS mobile,
                a.create_time AS createTimeDate,
                b.purchase_remark
            FROM mb_customer_advisor a LEFT JOIN mb_customer_buy_addition b
                ON a.staff_id = b.staff_id AND a.union_id = b.union_id
            WHERE a.staff_id = :queryParam.staffId
                <#if queryParam.customerName ? exists>
                    AND a.remark_name like concat(:queryParam.customerName, '%')
                </#if>
                <#if queryParam.expectEndTime ? exists>
                    AND b.expect_purchase_time < :queryParam.expectEndTime
                </#if>
            ORDER BY a.create_time DESC
            LIMIT :queryParam.startIndex, :queryParam.pageSize
        ]]>
    </sql>

    <sql id = "queryCustomerListDefaultName">
        <![CDATA[
            SELECT a.staff_id,
                a.union_id AS unionId,
                a.remark_name AS custName,
                a.customer_no AS custId,
                DATE_FORMAT(b.expect_purchase_time, '%Y-%m-%d') AS expectDate,
                a.remark_phone AS mobile,
                a.create_time AS createTimeDate,
                b.purchase_remark
            FROM mb_customer_advisor a LEFT JOIN mb_customer_buy_addition b
                ON a.staff_id = b.staff_id AND a.union_id = b.union_id
            WHERE a.staff_id = :queryParam.staffId
                   AND (a.remark_name = '' or a.remark_name is null)
                <#if queryParam.expectEndTime ? exists>
                   AND b.expect_purchase_time < :queryParam.expectEndTime
                </#if>
            ORDER BY a.create_time DESC
            LIMIT :queryParam.startIndex, :queryParam.pageSize
        ]]>
    </sql>

    <sql id = 'queryCustomersLabel'>
        <![CDATA[
        SELECT b.union_id,
            b.staff_id,
            c.label_name AS labelStr
        FROM mb_customer_label_relation b, mb_label_info c
        WHERE b.staff_id = :staffId
            AND b.label_id = c.id
            AND b.union_id in (:unionIds)
        ]]>
    </sql>

    <sql id = 'queryCustomersPurchase'>
        <![CDATA[
            SELECT c.union_id AS unionId,
            sum(min_price) as minPrice,
            sum(c.max_price) as maxPrice
            FROM mb_customer_cate_intention c
            WHERE c.staff_id = :staffId AND c.union_id IN (:unionIds)
            GROUP BY c.staff_id,c.union_id
        ]]>
    </sql>

    <sql id="setManagerFlag">
        UPDATE mb_customer_advisor
        SET manager_flag = 1
        WHERE customer_no = :customerNo and staff_id = :staffId
    </sql>


    <sql id="updateLastScanTimeSkipNull">
        UPDATE mb_customer_advisor
        SET last_scan_time = :lastScanTime
        WHERE id = :id
    </sql>

    <sql id="updateCustomer">
        UPDATE mb_customer_advisor
        SET
        remark_name = :advisor.remarkName,
        sex = :advisor.sex,
        remark_phone = :advisor.remarkPhone,
        UPDATER = :advisor.updater,
        UPDATE_TIME = :advisor.updateTime
        WHERE id = :advisor.id
    </sql>

    <sql id = 'queryInfoByStaffAndCustNo'>
        <![CDATA[
        SELECT
           id,
           manager_flag as managerFlag
        FROM
            mb_customer_advisor
        WHERE
            staff_id = :staffId
            AND customer_no =:custNo
        ]]>
    </sql>
</sqlMap>